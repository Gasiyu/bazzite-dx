# image will be published to ghcr.io/<user>/<name>
name: bazzite-gnome-dx
# description will be included in the image's metadata
description: This is my custom Bazzite GNOME image that tries to add all the development capabilities from the Bluefin DX image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bazzite-gnome
image-version: latest # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: containerfile
    snippets:
      - ARG IMAGE_VENDOR="${IMAGE_REGISTRY}"
      - ARG FEDORA_MAJOR_VERSION="${OS_VERSION}"
      - ARG IMAGE_FLAVOR="${IMAGE_FLAVOR:-main}"
      - ARG BASE_IMAGE_NAME="${BASE_IMAGE_NAME:-bazzite}"
      - COPY --from=ghcr.io/ublue-os/bluefin-cli /usr/bin/atuin /usr/bin/atuin
      - COPY --from=ghcr.io/ublue-os/bluefin-cli /usr/share/bash-prexec /usr/share/bash-prexec

  - type: files
    files:
      - source: bluefin/system_files/shared/usr/bin 
        destination: /usr/bin
      - source: bluefin/system_files/shared/usr/etc
        destination: /usr/etc
      - source: bluefin/system_files/shared/usr/libexec
        destination: /usr/libexec
      - source: bluefin/system_files/shared/usr/lib/tmpfiles.d
        destination: /usr/lib/tmpfiles.d
      - source: bluefin/system_files/shared/usr/share/ublue-os/bluefin
        destination: /usr/share/ublue-os/bluefin
      - source: bluefin/system_files/shared/usr/share/ublue-os/bluefin-cli
        destination: /usr/share/ublue-os/bluefin-cli
      - source: bluefin/system_files/shared/usr/share/ublue-os/homebrew
        destination: /usr/share/ublue-os/homebrew
      - source: bluefin/system_files/shared/usr/share/ublue-os/quadlets
        destination: /usr/share/ublue-os/quadlets
      - source: bluefin/system_files/silverblue/usr/etc/flatpak
        destination: /usr/etc/flatpak
      # Avoid Bluefin branding
      # - source: bluefin/system_files/silverblue/usr/share:
       # destination: /usr/share
      - source: bluefin/system_files/dx
        destination: /
      - source: files/shared
        destination: /

# Activate RPM Fusion repos
  - type: script
    scripts:
      - copr-repos.sh

# Install packages from Bluefin and Bluefin DX
  - from-file: packages.yml

# Install GNOME packages
  - type: rpm-ostree
    install:
      - simple-scan
      - gnome-shell-extension-appindicator
      - gnome-shell-extension-blur-my-shell
      # - gnome-shell-extension-caffeine # Already in Bazzite
      - gnome-shell-extension-dash-to-dock
      # - gnome-shell-extension-gsconnect # Already in Bazzite
      - libgda-sqlite
      - libgda
      - libratbag-ratbagd
      - nautilus-gsconnect
      - openssh-askpass
      - yaru-theme
      - nautilus-open-any-terminal
    remove:
      - gnome-extensions-app
      - gnome-software-rpm-ostree
      - gnome-tour
      - gnome-terminal-nautilus

  - type: gnome-extensions
    install:
      # - Logo Menu # Already in Bazzite
      - Search Light

# Install Starhip and activate RPM Fusion repos
  - type: script
    snippets:
      - "find ${CONFIG_DIRECTORY}/bluefin/build_files -type f -exec chmod +x {} \\;" # Make bluefin scripts executable
    scripts:
      - ../bluefin/build_files/shared/image-info.sh
      - fetch-install.sh
      - ../bluefin/build_files/base/fetch-quadlets.sh

# alternatives cannot create symlinks on its own during a container build
  - type: script
    snippets:
      - "ln -sf /usr/bin/ld.bfd /etc/alternatives/ld && ln -sf /etc/alternatives/ld /usr/bin/ld"

# Install fonts
  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode # don't add spaces or "Nerd Font" suffix.
        - Hack
        - SourceCodePro
        - Terminus
        - JetBrainsMono
        - NerdFontsSymbolsOnly
      google-fonts:
        - Roboto
        - Open Sans

# Enable systemd services
  - type: systemd
    system:
      enabled:
        - rpm-ostree-countme.service
        # - dconf-update.service Already in Bazzite
        - docker.socket
        - podman.socket
        - swtpm-workaround.service
    user:
      enabled:
        - podman-auto-update.timer

# Cleanup repos, etc...
  - type: script
    scripts:
      - cleanup.sh

  - type: signing # this sets up the proper policy & signing files for signed images to work fully

