# image will be published to ghcr.io/<user>/<name>
name: bazzite-dx
# description will be included in the image's metadata
description: This is my custom Bazzite image that tries to add all the development capabilities from the Bluefin DX image.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bazzite
image-version: latest # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  # - type: files
    # files:
      # - usr: /usr # copies config/files/usr into your image's /usr.
                  # put configuration files you want in /etc/ on a booted system 
                  # in /usr/etc/ in the image. read more in files module reference.

# Copy Bluefin-CLI
  - type: copy
    from: ghcr.io/ublue-os/bluefin-cli
    src: /usr/bin/atuin
    dest: /usr/bin/atuin
  - type: copy
    from: ghcr.io/ublue-os/bluefin-cli
    src: /usr/share/bash-prexec
    dest: /usr/share/bash-prexec

# Install packages from Bluefin and Bluefin DX
  - from-file: packages.yml

# Install Starhip
  - type: script
    snippets:
      - "curl -Lo /tmp/starship.tar.gz 'https://github.com/starship/starship/releases/latest/download/starship-x86_64-unknown-linux-gnu.tar.gz'"
      - "tar -xzf /tmp/starship.tar.gz -C /tmp"
      - "install -c -m 0755 /tmp/starship /usr/bin"
      - "# shellcheck disable=SC2016"
      - "echo 'eval \"$(starship init bash)\"' >> /etc/bashrc"


# alternatives cannot create symlinks on its own during a container build
  - type: script
    snippets:
      - "ln -sf /usr/bin/ld.bfd /etc/alternatives/ld && ln -sf /etc/alternatives/ld /usr/bin/ld"

  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode # don't add spaces or "Nerd Font" suffix.
        - Hack
        - SourceCodePro
        - Terminus
        - JetBrainsMono
        - NerdFontsSymbolsOnly
      google-fonts:
        - Roboto
        - Open Sans

  - type: systemd
    system:
      enabled:
        - rpm-ostree-countme.service
        # - dconf-update.service Already in Bazzite
        - docker.socket
        - podman.socket
        - swtpm-workaround.service
    user:
      enabled:
        - podman-auto-update.timer

  - type: default-flatpaks
    notify: true # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      # repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      # repo-name: flathub
      # repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
        # - org.mozilla.firefox
        # - org.gnome.Loupe
        # - one.ablaze.floorp//lightning # This is an example of flatpak which has multiple branches in selection (flatpak//branch).
      # Flatpak runtimes are not supported (like org.winehq.Wine//stable-23.08),
      # only normal flatpak applications are (like Floorp Lightning web browser in this example).
      # Installing different branches of the same Flatpak is not supported.
      remove:
      # - org.gnome.eog

  - type: signing # this sets up the proper policy & signing files for signed images to work fully

